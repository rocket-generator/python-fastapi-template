from typing import Optional, Type

from app.interfaces.repositories.{{ .Name.Singular.Snake }}_repository_interface import \
    {{ .Name.Singular.Title }}RepositoryInterface
from app.models.{{ .Name.Singular.Snake }} import {{ .Name.Singular.Title }}
from tests.mocks.model_factories.{{ .Name.Singular.Snake }} import {{ .Name.Singular.Snake }}_factory
from tests.mocks.repositories.mock_base_repository import MockBaseRepository


class Mock{{ .Name.Singular.Title }}Repository({{ .Name.Singular.Title }}RepositoryInterface,
                              MockBaseRepository):

    @property
    def model(self):
        return {{ .Name.Singular.Title }}

    def generate_model(self,
                       _id: Optional[str] = None,
                       data: Optional[dict] = None) -> {{ .Name.Singular.Title }}:
        return {{ .Name.Singular.Snake }}_factory(_id=_id, data=data)
